---
# Download and compile FFmpeg

- name: Install packages for ffmpeg building [CentOS]
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - autoconf
    - automake
    - bzip2
    - cmake
    - freetype-devel
    - gcc
    - gcc-c++
    - git
    - libtool
    - make
    - mercurial
    - pkgconfig
    - zlib-devel
  when: ansible_distribution == "CentOS"

- name: Install packages for ffmpeg building [Debian/Ubuntu]
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - autoconf
    - automake
    - build-essential
    - cmake
    - git-core
    - libass-dev
    - libfreetype6-dev
    - libsdl2-dev
    - libtool
    - libva-dev
    - libvdpau-dev
    - libvorbis-dev
    - libxcb1-dev
    - libxcb-shm0-dev
    - libxcb-xfixes0-dev
    - pkg-config
    - texinfo
    - wget
    - zlib1g-dev
  when: ansible_os_family == "Debian"

- name: Make ffmpeg sources temporary directory
  file:
    path: "{{ ffmpeg_compile_dir }}/sources"
    state: directory
    owner: root
    group: root
    mode: u=rwX,g=rwX,o=rX

- name: Make ffmpeg sources build directory
  file:
    path: "{{ ffmpeg_compile_dir }}/build"
    state: directory
    owner: root
    group: root
    mode: u=rwX,g=rwX,o=rX

- name: Make ffmpeg binaries temporary directory
  file:
    path: "{{ ffmpeg_compile_dir }}/bin"
    state: directory
    owner: root
    group: root
    mode: u=rwX,g=rwX,o=rX

# NASM

- name: Download NASM sources
  get_url:
    url: "https://www.nasm.us/pub/nasm/releasebuilds/{{ nasm_version }}/nasm-{{ nasm_version }}.tar.bz2"
    dest: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}.tar.bz2"
    owner: root
    group: root
    mode: u=r,g=r,o=
    checksum: "{{ nasm_checksum }}"

- name: Unarchive NASM sources
  unarchive:
    remote_src: yes
    src: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}.tar.bz2"
    dest: "{{ ffmpeg_compile_dir }}/sources/"
    owner: root
    group: root
    creates: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}"

- name: Modifiy autogen.sh to write a flag file if it has run
  lineinfile:
    path: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}/autogen.sh"
    line: touch flag_autogen_run

- name: Run autogen.sh in NASM sources directory
  command: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}/autogen.sh"
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}"
    creates: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}/flag_autogen_run"

- name: Run configure in NASM sources directory
  command: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}/configure --prefix={{ ffmpeg_compile_dir }}/build/ --bindir={{ ffmpeg_compile_dir }}/bin/"
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}"
    creates: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}/config.status"

- name: Run make in NASM sources directory
  command: make
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}"
    creates: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}/libnasm.a"

- name: Run make install in NASM sources directory
  command: make install
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/nasm-{{ nasm_version }}"
    creates: "{{ ffmpeg_compile_dir }}/bin/nasm"

# Yasm

- name: Download Yasm sources
  get_url:
    url: "https://www.tortall.net/projects/yasm/releases/yasm-{{ yasm_version }}.tar.gz"
    dest: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}.tar.gz"
    owner: root
    group: root
    mode: u=r,g=r,o=
    checksum: "{{ yasm_checksum }}"

- name: Unarchive Yasm sources
  unarchive:
    remote_src: yes
    src: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}.tar.gz"
    dest: "{{ ffmpeg_compile_dir }}/sources/"
    owner: root
    group: root
    creates: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}"

- name: Run configure in Yasm sources directory
  command: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}/configure --prefix={{ ffmpeg_compile_dir }}/build/ --bindir={{ ffmpeg_compile_dir }}/bin/"
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}"
    creates: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}/config.status"

- name: Run make in Yasm sources directory
  command: make
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}"
    creates: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}/libyasm.a"

- name: Run make install in Yasm sources directory
  command: make install
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/yasm-{{ yasm_version }}"
    creates: "{{ ffmpeg_compile_dir }}/bin/yasm"

# libx264

- name: Download libx264 sources
  get_url:
    url: "ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-{{ libx264_version }}.tar.bz2"
    dest: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}.tar.gz"
    owner: root
    group: root
    mode: u=r,g=r,o=
    checksum: "{{ libx264_checksum }}"

- name: Unarchive libx264 sources
  unarchive:
    remote_src: yes
    src: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}.tar.gz"
    dest: "{{ ffmpeg_compile_dir }}/sources/"
    owner: root
    group: root
    creates: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}"

- name: Run configure in libx264 sources directory
  command: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}/configure --prefix={{ ffmpeg_compile_dir }}/build/ --bindir={{ ffmpeg_compile_dir }}/bin/ --enable-static --enable-pic"
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}"
    creates: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}/config.h"
  environment:
    PATH: "{{ ffmpeg_compile_dir }}/bin:{{ ansible_env.PATH }}"
    PKG_CONFIG_PATH: "{{ ffmpeg_compile_dir }}/build/lib/pkgconfig"

- name: Run make in libx264 sources directory
  command: make
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}"
    creates: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}/libx264.a"
  environment:
    PATH: "{{ ffmpeg_compile_dir }}/bin:{{ ansible_env.PATH }}"

- name: Run make install in libx264 sources directory
  command: make install
  args:
    chdir: "{{ ffmpeg_compile_dir }}/sources/x264-snapshot-{{ libx264_version }}"
    creates: "{{ ffmpeg_compile_dir }}/bin/x264"
  environment:
    PATH: "{{ ffmpeg_compile_dir }}/bin:{{ ansible_env.PATH }}"

